#!/bin/bash
# @Author: liangou
# @Date:   2020-11-26 20:12:55
# @Last Modified by:   liangou
# @Last Modified time: 2020-12-13 20:20:24

###
### find_motif & calcu_closest_m6a & intersect sites
### author:
### liangou@ips.ac.cn
###
### Usage:
###   bash ./find_motif.sh  -i <bed file or directory> -o <output directory>  -a <reference sequence>
###
### Options:
###   <input>   Input file of directory(match all *.bed files in the directory)
###   <output directory>  Output  to write. 
###   -h        Show this message.
### requiement: bedtools,meme,r-base,r-Biostrings,r-stringr
set -e
help() {
    sed -rn 's/^### ?//;T;p' "$0"
}

#export PATH=$PATH:/home/weir/software/meme/bin

find_motif(){

	#parse param
	input=$1 #Bed file or directory generated by 'differ'
	if [ -d ${input} ];then
		input=`ls ${input}/*.bed`
	fi
	output=$2
	mkdir -p $output
	fasta=$3

	#check Required external commands
	bedtools --help >/dev/null && echo Checked bedtools is OK...
	if [ $? != 0 ];then
		echo "Please install bedtools see https://github.com/arq5x/bedtools2"
	fi
	meme -version >/dev/null && echo Checked meme is OK...
	if [ $? != 0 ];then
		echo "Please install meme see http://meme-suite.org/"
	fi

	#main func
	for input in ${input};do
		out_preifx=`basename ${input} .bed`
		sort -k 1,1 -k 2,2n ${input} |bedtools merge -s -c 4,5,6 -o distinct,first,distinct -i stdin | bedtools slop -b 6 -i stdin -g  ${fasta}.fai | \
		bedtools getfasta -s -fi ${fasta} -fo ${output}/${out_preifx}.fa -bed stdin 
		meme -oc ${output}/meme_${out_preifx} -minsites 100 -dna -nmotifs 1 -minw 5 -maxw 7 -mod zoops ${output}/${out_preifx}.fa
	
		Rscript ./calcu_closest_motif.R ${input} "RRACH" ${fasta} ${out_preifx} ${output}
	done

	#The m6a sites under all conditions were intersected
	for input in ${output}/*_FDR0.05_closet_motif.txt ;do
		 cat ${input} |awk -F '\t' '{if($18<=5 && $18>=-5)print$1"_"$15}' | sort -u >>sites_tmp 
	num=$( sort  sites_tmp |uniq -c |sort -nr |sed -n '1p' |awk '{print$1}' )
	sort sites_tmp |uniq -c |sort -nr |sed -n "/^[ ]*${num}/p" |awk -F '[ _]+' '{print$3,$4}' OFS='\t'>${output}/final_overlep_sites
	done
	rm sites_tmp
	cat ${output}/final_overlep_sites |while read line; do
		transid=`echo $line |awk '{print$1}'`
		pos=`echo $line |awk '{print$2}'`
		cat "/home/weir/output/vir_fip37_mtb/result_11_28/At.vir_vs_VIRc_guppy4015.differr_odd1_FDR0.05_closet_motif.txt" \
		|grep $transid |grep $pos >>final_result
	done


}

while getopts "i:o:a:" opt
do
    case $opt in
        i)
        i=$OPTARG;;
        o)
        o=$OPTARG;;
        a)
        a=$OPTARG;;
        ?)
		echo -e "\033[31m Error Unknown parameter \033[0m"
        help
        exit 1;;
    esac
done
if [ $# != 3 ];then
	echo -e "\033[31m Error num of  params \033[0m"
	help
	exit 1
fi
find_motif $i $o $a && echo "Motif research was successfully finished"

#e.g bash ./find_motif.sh -i /home/shihan/qinhang/At_Nanopore_RawData/nano_guppy324/differr_guppy324.out/trans_ref/20201114-differr/fC_guppy324.differr_odd1_FDR0.01.bed \
#-o ./result -a "/home/weir/output/Simpson_Barton_Nanopore_1/pipeline/chimera_pipeline/Araport11_genes.201606.cdna.fasta" 
